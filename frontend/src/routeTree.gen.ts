/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './pages/__root'
import { Route as SubcriptionIndexImport } from './pages/subcription/index'
import { Route as RegisterIndexImport } from './pages/register/index'
import { Route as LoginIndexImport } from './pages/login/index'
import { Route as RegisterLayoutImport } from './pages/register/_layout'
import { Route as RegisterLayoutFooImport } from './pages/register/_layout/foo'
import { Route as RegisterLayoutPersonalInfoIndexImport } from './pages/register/_layout/personal-info/index'
import { Route as RegisterLayoutPaymentSelectionIndexImport } from './pages/register/_layout/payment-selection/index'
import { Route as RegisterLayoutAccountVerificationIndexImport } from './pages/register/_layout/account-verification/index'
import { Route as RegisterLayoutAccessCredentialIndexImport } from './pages/register/_layout/access-credential/index'

// Create Virtual Routes

const RegisterImport = createFileRoute('/register')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const RegisterRoute = RegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./pages/index.lazy').then((d) => d.Route))

const SubcriptionIndexRoute = SubcriptionIndexImport.update({
  path: '/subcription/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterIndexRoute = RegisterIndexImport.update({
  path: '/',
  getParentRoute: () => RegisterRoute,
} as any)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any)

const RegisterLayoutRoute = RegisterLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => RegisterRoute,
} as any)

const RegisterLayoutFooRoute = RegisterLayoutFooImport.update({
  path: '/foo',
  getParentRoute: () => RegisterLayoutRoute,
} as any)

const RegisterLayoutPersonalInfoIndexRoute =
  RegisterLayoutPersonalInfoIndexImport.update({
    path: '/personal-info/',
    getParentRoute: () => RegisterLayoutRoute,
  } as any)

const RegisterLayoutPaymentSelectionIndexRoute =
  RegisterLayoutPaymentSelectionIndexImport.update({
    path: '/payment-selection/',
    getParentRoute: () => RegisterLayoutRoute,
  } as any)

const RegisterLayoutAccountVerificationIndexRoute =
  RegisterLayoutAccountVerificationIndexImport.update({
    path: '/account-verification/',
    getParentRoute: () => RegisterLayoutRoute,
  } as any)

const RegisterLayoutAccessCredentialIndexRoute =
  RegisterLayoutAccessCredentialIndexImport.update({
    path: '/access-credential/',
    getParentRoute: () => RegisterLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterImport
      parentRoute: typeof rootRoute
    }
    '/register/_layout': {
      id: '/register/_layout'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterLayoutImport
      parentRoute: typeof RegisterRoute
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/': {
      id: '/register/'
      path: '/'
      fullPath: '/register/'
      preLoaderRoute: typeof RegisterIndexImport
      parentRoute: typeof RegisterImport
    }
    '/subcription/': {
      id: '/subcription/'
      path: '/subcription'
      fullPath: '/subcription'
      preLoaderRoute: typeof SubcriptionIndexImport
      parentRoute: typeof rootRoute
    }
    '/register/_layout/foo': {
      id: '/register/_layout/foo'
      path: '/foo'
      fullPath: '/register/foo'
      preLoaderRoute: typeof RegisterLayoutFooImport
      parentRoute: typeof RegisterLayoutImport
    }
    '/register/_layout/access-credential/': {
      id: '/register/_layout/access-credential/'
      path: '/access-credential'
      fullPath: '/register/access-credential'
      preLoaderRoute: typeof RegisterLayoutAccessCredentialIndexImport
      parentRoute: typeof RegisterLayoutImport
    }
    '/register/_layout/account-verification/': {
      id: '/register/_layout/account-verification/'
      path: '/account-verification'
      fullPath: '/register/account-verification'
      preLoaderRoute: typeof RegisterLayoutAccountVerificationIndexImport
      parentRoute: typeof RegisterLayoutImport
    }
    '/register/_layout/payment-selection/': {
      id: '/register/_layout/payment-selection/'
      path: '/payment-selection'
      fullPath: '/register/payment-selection'
      preLoaderRoute: typeof RegisterLayoutPaymentSelectionIndexImport
      parentRoute: typeof RegisterLayoutImport
    }
    '/register/_layout/personal-info/': {
      id: '/register/_layout/personal-info/'
      path: '/personal-info'
      fullPath: '/register/personal-info'
      preLoaderRoute: typeof RegisterLayoutPersonalInfoIndexImport
      parentRoute: typeof RegisterLayoutImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexLazyRoute,
  RegisterRoute: RegisterRoute.addChildren({
    RegisterLayoutRoute: RegisterLayoutRoute.addChildren({
      RegisterLayoutFooRoute,
      RegisterLayoutAccessCredentialIndexRoute,
      RegisterLayoutAccountVerificationIndexRoute,
      RegisterLayoutPaymentSelectionIndexRoute,
      RegisterLayoutPersonalInfoIndexRoute,
    }),
    RegisterIndexRoute,
  }),
  LoginIndexRoute,
  SubcriptionIndexRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/register",
        "/login/",
        "/subcription/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/register": {
      "filePath": "register",
      "children": [
        "/register/_layout",
        "/register/"
      ]
    },
    "/register/_layout": {
      "filePath": "register/_layout.tsx",
      "parent": "/register",
      "children": [
        "/register/_layout/foo",
        "/register/_layout/access-credential/",
        "/register/_layout/account-verification/",
        "/register/_layout/payment-selection/",
        "/register/_layout/personal-info/"
      ]
    },
    "/login/": {
      "filePath": "login/index.tsx"
    },
    "/register/": {
      "filePath": "register/index.tsx",
      "parent": "/register"
    },
    "/subcription/": {
      "filePath": "subcription/index.tsx"
    },
    "/register/_layout/foo": {
      "filePath": "register/_layout/foo.tsx",
      "parent": "/register/_layout"
    },
    "/register/_layout/access-credential/": {
      "filePath": "register/_layout/access-credential/index.tsx",
      "parent": "/register/_layout"
    },
    "/register/_layout/account-verification/": {
      "filePath": "register/_layout/account-verification/index.tsx",
      "parent": "/register/_layout"
    },
    "/register/_layout/payment-selection/": {
      "filePath": "register/_layout/payment-selection/index.tsx",
      "parent": "/register/_layout"
    },
    "/register/_layout/personal-info/": {
      "filePath": "register/_layout/personal-info/index.tsx",
      "parent": "/register/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
